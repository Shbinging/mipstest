#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n101_msubu_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_MSUBU(0x5452d6af, 0x5fbebdd0, 0x5d9c545a, 0x0ae10bc7, 0x311366b9, 0x5bc457d0)
    TEST_MSUBU(0x2e90e5a0, 0x29382232, 0x6ca4314e, 0x45b923e9, 0x33045ba2, 0x0ba14f03)
    TEST_MSUBU(0x2cdae22d, 0x58f3bbfa, 0x66d5ac3d, 0x4e233c0e, 0x56762ad7, 0x39907a29)
    TEST_MSUBU(0x0dc8bbc4, 0x0b1895d5, 0x047970cf, 0x5cdf31c2, 0xc2d89fe6, 0x09790aa2)
    TEST_MSUBU(0x4ead2a6b, 0x0c2622be, 0x1ef74e6e, 0x30a2ddf2, 0x4894106f, 0x064410b1)
    TEST_MSUBU(0x4cc6b886, 0x7239aacc, 0x5d3e9a76, 0x2e76e485, 0xb34b6138, 0x614d1cf3)
    TEST_MSUBU(0x4939b078, 0x3ee1b043, 0x75922c69, 0x66ab20a0, 0x082dced8, 0x0fbadaf2)
    TEST_MSUBU(0x5ddab2e7, 0x02cd0f9c, 0x37d476ed, 0x322d8997, 0x8a3ab81c, 0xf7dba207)
    TEST_MSUBU(0x628bcd6c, 0x1570cb47, 0x3d0e955e, 0x111cb30c, 0xbf241304, 0x115bfb0f)
    TEST_MSUBU(0x3ea8ed79, 0x29b2c6ac, 0x56d5d6f5, 0x6b83cfa7, 0x49fa98a6, 0x053aaff7)
    TEST_MSUBU(0x02a682a6, 0x3dab8332, 0x39a70bb5, 0x106f3e6b, 0x1183c7ff, 0x39f804fa)
    TEST_MSUBU(0x48c41907, 0x3e207c85, 0x6d4e702d, 0x17714372, 0x859d5dfd, 0x341e1405)
    TEST_MSUBU(0x4a469f43, 0x0c45be9b, 0x48142165, 0x170d57c9, 0x15fe13f6, 0x05c82dde)
    TEST_MSUBU(0x7e7f6967, 0x2552bbdb, 0x45843c4e, 0x47b919e0, 0x8a890727, 0x11d8cb8b)
    TEST_MSUBU(0x64346c1f, 0x3b1668b7, 0x2e643a80, 0x420f1f06, 0xbd458d1f, 0x2f1dd423)
    TEST_MSUBU(0x3de37853, 0x6638b16d, 0x743ca89d, 0x206f45bf, 0x6f1c5a30, 0x577e9661)
    TEST_MSUBU(0x7ba97cb5, 0x314b3dfb, 0x318bf8cc, 0x3a526a2e, 0xb626500d, 0x2601943a)
    TEST_MSUBU(0x5afe04a8, 0x0861cfc1, 0x25d639d5, 0x5da4874e, 0x6dc512c2, 0xfa8aab82)
    TEST_MSUBU(0x460d52f4, 0x5f7d458b, 0x6e13c5b9, 0x0ed16bfb, 0x8afd2391, 0x591e2428)
    TEST_MSUBU(0x1d9dc210, 0x5b6235e6, 0x2642af6e, 0x67e46153, 0xf18e3366, 0x4bdb3f60)
    TEST_MSUBU(0x67a7f481, 0x6e56d0d3, 0x7ef1b91c, 0x66275de9, 0xb2234e05, 0x3baefbad)
    TEST_MSUBU(0x13a98cae, 0x4475f56a, 0x2de077c9, 0x77ddf8cd, 0x0b59e8b9, 0x2efad65e)
    TEST_MSUBU(0x7f8c5e22, 0x5c44b249, 0x39ed17d4, 0x3d6fd675, 0xfb59423e, 0x4e5de547)
    TEST_MSUBU(0x427d63b6, 0x2e29c071, 0x5ddf1c35, 0x3e26e06b, 0xc7b0398f, 0x175f7633)
    TEST_MSUBU(0x5f74fe6d, 0x0f6b1501, 0x78794a9a, 0x3a730315, 0xaa7411cb, 0xf3e97a2a)
    TEST_MSUBU(0x17cce4c2, 0x1e4f846f, 0x18178a63, 0x5dda37b6, 0x19073d60, 0x157a6ddf)
    TEST_MSUBU(0x7dccc9fa, 0x062b501d, 0x6caba3b2, 0x1b6a8c0a, 0xd3df0d06, 0xfa87fb55)
    TEST_MSUBU(0x618d8603, 0x12ee5320, 0x034eed5d, 0x49357a85, 0x632ce2b2, 0x11fc2084)
    TEST_MSUBU(0x014523f3, 0x0240a679, 0x2f5cd86e, 0x14eeb0a1, 0x94d166c5, 0xfe613c91)
    TEST_MSUBU(0x46b69be4, 0x5d3d5037, 0x0ccca96f, 0x4642fa06, 0x13d63d4a, 0x59ba009f)
    TEST_MSUBU(0x39820280, 0x46b9c143, 0x03b2d07b, 0x7bff6636, 0x6f34068e, 0x44ef2680)
    TEST_MSUBU(0x74e381b4, 0x6191ecb0, 0x3a2646a2, 0x54588021, 0x62f366d2, 0x4e694340)
    TEST_MSUBU(0x70fd01b1, 0x329f913c, 0x0ecb8336, 0x08c9e674, 0x2f7d0939, 0x321d8a07)
    TEST_MSUBU(0x50ef15ab, 0x26e30d9a, 0x66a41e2a, 0x4ebbdfa6, 0xf78ef06f, 0x0751b8db)
    TEST_MSUBU(0x2d0e5db7, 0x534fc1dc, 0x6a266bb0, 0x0e9be3ba, 0x28170fd7, 0x4d410448)
    TEST_MSUBU(0x663e14fc, 0x6d75590e, 0x57d15e3f, 0x678338ef, 0x09ec502b, 0x49f31878)
    TEST_MSUBU(0x6fb5ff87, 0x072e36ad, 0x7c71e991, 0x366c9b6b, 0x548294ec, 0xecb963cd)
    TEST_MSUBU(0x646b86e4, 0x093e9300, 0x7caf9571, 0x1ded8964, 0x923eadc0, 0xfaaafd9a)
    TEST_MSUBU(0x4ff85443, 0x006265ed, 0x19ecef9b, 0x44dbd5f7, 0x03682eb6, 0xf96932ec)
    TEST_MSUBU(0x61f4529d, 0x5413363d, 0x19345619, 0x52f1544f, 0x5f048ce6, 0x4be8b017)
    TEST_MSUBU(0x06b2c779, 0x27ffd94f, 0x5bbb3ac3, 0x57a1dd24, 0x45012d0d, 0x08993859)
    TEST_MSUBU(0x4ee2e6e9, 0x425f58ed, 0x265dbcca, 0x7bf144a0, 0xa5fd40a9, 0x2fcc26b0)
    TEST_MSUBU(0x15af1aca, 0x1084287b, 0x0a8d285b, 0x7bed2fc6, 0xecda2f68, 0x0b688f70)
    TEST_MSUBU(0x7df98189, 0x625e869a, 0x637068b6, 0x6daf8110, 0x8fc54029, 0x37c37e0b)
    TEST_MSUBU(0x698cbd48, 0x5fe25247, 0x241c1c7c, 0x4df8442c, 0xd906e7f8, 0x54e2d8dc)
    TEST_MSUBU(0x6920e547, 0x20cbb1ed, 0x6be5cd91, 0x3919398a, 0xb851cc1d, 0x08bae576)
    TEST_MSUBU(0x212e17da, 0x05d2bd2c, 0x7df50f81, 0x03226a78, 0x0bc16962, 0x0447ef0f)
    TEST_MSUBU(0x59e5f369, 0x1729659a, 0x5613bec7, 0x6098bae2, 0x1db2f1bb, 0xf6aea380)
    TEST_MSUBU(0x3f293eea, 0x31cef98a, 0x383a9806, 0x0e0c25d3, 0xfa9d13f8, 0x2eb91a2b)
    TEST_MSUBU(0x742e5277, 0x5e9854d1, 0x09fd6a74, 0x09dd6d41, 0x0a5ee703, 0x5e35c80b)
    TEST_MSUBU(0x6f1c7d4c, 0x148a92cf, 0x05ca9d08, 0x6d15fed5, 0x4c11e5a4, 0x1212ce90)
    TEST_MSUBU(0x76e91969, 0x693b05be, 0x5ac57fe5, 0x6075d6b1, 0x47c93e14, 0x47072d65)
    TEST_MSUBU(0x491d5805, 0x7ee19c61, 0x2e6e1ade, 0x323e3d4c, 0x6642781d, 0x75c4d159)
    TEST_MSUBU(0x1fad4e4f, 0x1a53e86f, 0x6b5776d6, 0x40db6629, 0xec400209, 0xff220c10)
    TEST_MSUBU(0x2026a59b, 0x694c8657, 0x43fdd0a1, 0x7a0c9904, 0xdcf32a17, 0x48e23860)
    TEST_MSUBU(0x0075ebf2, 0x1a118f68, 0x5aa553e6, 0x3f9f2adc, 0x44c4164a, 0x038a83e6)
    TEST_MSUBU(0x4be088f2, 0x12dfebec, 0x4dab50af, 0x400edb6a, 0x6b596b7c, 0xff7095d0)
    TEST_MSUBU(0x717840bd, 0x57a8bb23, 0x49ec48ab, 0x6094be09, 0x575ec8ba, 0x3bc52c69)
    TEST_MSUBU(0x6c334df2, 0x4fb6e5b3, 0x4daabcde, 0x631c675c, 0x4e921c2a, 0x31a540a1)
    TEST_MSUBU(0x38f1eb71, 0x28703cc4, 0x43923e0d, 0x020f4376, 0x1088ea73, 0x27e510e8)
    TEST_MSUBU(0x2751d925, 0x720058eb, 0x344d80c2, 0x46ff2774, 0x5857f33d, 0x637f0673)
    TEST_MSUBU(0x0c54415a, 0x1fa4f798, 0x07da8d9e, 0x2c7ae6f5, 0x87a2c524, 0x1e47a203)
    TEST_MSUBU(0x08f17df0, 0x4bd85e3f, 0x26877ff9, 0x096769e2, 0x33a6631e, 0x4a6e0a4b)
    TEST_MSUBU(0x65e9eda8, 0x012cd3df, 0x490694be, 0x31ca769a, 0xb378df5c, 0xf2f8d060)
    TEST_MSUBU(0x140cbfcc, 0x16b1e56d, 0x71d95204, 0x05850089, 0x76abdba8, 0x143d80ae)
    TEST_MSUBU(0x6e5aa091, 0x3bc59ab0, 0x6619be93, 0x5a8dee83, 0x9b0a7158, 0x17a7f262)
    TEST_MSUBU(0x0b7c8063, 0x33c47b71, 0x3daa55df, 0x446e6bd5, 0x690cd8d8, 0x2348a377)
    TEST_MSUBU(0x5c34b835, 0x013c93ed, 0x467daf4b, 0x0386915b, 0x7afbed8c, 0x00440d0f)
    TEST_MSUBU(0x733cecd8, 0x7acb300e, 0x4a85b8cf, 0x7f912e33, 0x3524e99b, 0x55a8962f)
    TEST_MSUBU(0x1a7027a6, 0x5260466d, 0x2c0c1528, 0x2361a596, 0x0590fa36, 0x4c49d277)
    TEST_MSUBU(0x1e38a4ad, 0x52939522, 0x2cc90f78, 0x04229255, 0xa6b411d5, 0x51da6496)
    TEST_MSUBU(0x53c06901, 0x75cfa436, 0x35ed08ef, 0x67cd28cd, 0xcb27e99e, 0x5ff20e35)
    TEST_MSUBU(0x0c8189a4, 0x27c65af4, 0x6d522957, 0x7adc2a35, 0xf2f2b4a1, 0xf34f2e9e)
    TEST_MSUBU(0x638bf5a4, 0x536be7ea, 0x556a18b8, 0x6f087607, 0x9880789c, 0x2e601480)
    TEST_MSUBU(0x0730635b, 0x13146e98, 0x3376e1dc, 0x63651b91, 0x273c41bf, 0xff1921ce)
    TEST_MSUBU(0x14510285, 0x79f49128, 0x66ebacec, 0x078def5d, 0xf846dcc9, 0x76eb0f63)
    TEST_MSUBU(0x74bfc136, 0x317165bb, 0x071f1d90, 0x0f2fe8dc, 0x45c7d976, 0x31053dcf)
    TEST_MSUBU(0x03d1ac29, 0x332b32b9, 0x32918e73, 0x220a50d6, 0x6b22a807, 0x2c71d426)
    TEST_MSUBU(0x05bec7db, 0x5f5a9deb, 0x262ce32b, 0x597f30dc, 0x273e7ee7, 0x52020b63)
    TEST_MSUBU(0x552a4222, 0x5c19ec1a, 0x414c59aa, 0x61abcbc6, 0xfa751aa6, 0x43302c26)
    TEST_MSUBU(0x03e0470e, 0x2e9e8301, 0x5c87f5fb, 0x676c3cb2, 0x0ccc6a88, 0x093cafbd)
    TEST_MSUBU(0x020a6aeb, 0x31f20eb3, 0x5674b2ba, 0x093ace46, 0x6e2be00f, 0x2ed41850)
    TEST_MSUBU(0x45067d4b, 0x09eb9496, 0x6c9fe9d7, 0x59577fd0, 0x7705d59b, 0xe402dbb6)
    TEST_MSUBU(0x03e025be, 0x538b96c3, 0x60e56f2e, 0x789fe6f4, 0xe9bcd9e6, 0x25e384ba)
    TEST_MSUBU(0x04fcfc7f, 0x68048cbe, 0x07cfcfd1, 0x08cea8a8, 0xc20d7357, 0x67bfbfe0)
    TEST_MSUBU(0x1b2fbf77, 0x3a615e44, 0x2ad8f97e, 0x20ee8752, 0x42fa631b, 0x34de52b6)
    TEST_MSUBU(0x19bbfc2f, 0x5105dca9, 0x7a6db82f, 0x6ee63e51, 0x1e2f5350, 0x1bfc9b24)
    TEST_MSUBU(0x2d1fc8c3, 0x3bba11d9, 0x50920a17, 0x31000fd2, 0x1fbc28e5, 0x2c4e18f0)
    TEST_MSUBU(0x6a5894da, 0x2d1a0012, 0x186c4c84, 0x6c62ffc5, 0xc4423746, 0x22c2ddee)
    TEST_MSUBU(0x5f0c0ec6, 0x6ee0ff3e, 0x759dce0b, 0x24128c11, 0x3a1d5c0b, 0x5e4e48d2)
    TEST_MSUBU(0x78cc93d5, 0x623db7e3, 0x7d6a0be2, 0x7cacb993, 0x5e796f0f, 0x2529bbf8)
    TEST_MSUBU(0x35c94ea6, 0x5e4f7b10, 0x754ca088, 0x3ac64b25, 0xd57e42fe, 0x436142fe)
    TEST_MSUBU(0x465407ce, 0x7d1c7059, 0x4394f3cd, 0x6183c746, 0x932e02c0, 0x635e3624)
    TEST_MSUBU(0x377dce9d, 0x6e6ded4b, 0x02724e98, 0x5139cacc, 0x7a8b3d7d, 0x6da73509)
    TEST_MSUBU(0x3f73c9f4, 0x7ce006c7, 0x4020091e, 0x6c9392b8, 0xff002064, 0x61ad8bc8)
    TEST_MSUBU(0x389a18a0, 0x10b21335, 0x1d93a28a, 0x22f2ad7a, 0x60f360dc, 0x0ca86e04)
    TEST_MSUBU(0x3dcc1348, 0x35ffef0e, 0x0f55ad3f, 0x1cd8220e, 0xf4f23bd6, 0x34459dc6)
    TEST_MSUBU(0x24e0ee4d, 0x04f37b4b, 0x40eaae1f, 0x1dad8222, 0x2b57102f, 0xfd6ce5fa)
    TEST_MSUBU(0x6731332e, 0x3e54ba01, 0x1a5a3bb5, 0x1cfa81d4, 0x019f8c4a, 0x3b5911fe)
    TEST_MSUBU(0x1ca43511, 0x0fa6dc3d, 0x57c0ccfa, 0x62f83ce0, 0xddb64251, 0xedb9f620)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
### return
    jr ra
    nop
END(n101_msubu_test)
