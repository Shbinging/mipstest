#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n4_maddu_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_MADDU(0x73b1491b, 0x71ff0918, 0x65425edb, 0x0c9bf6de, 0xbcfefd05, 0x76fbd65f)
    TEST_MADDU(0x2047112c, 0x7ee80821, 0x0731ad0f, 0x5335e6d8, 0x84c78fd4, 0x813ea702)
    TEST_MADDU(0x2a5d13d9, 0x7ffa28d0, 0x3009e9be, 0x1e8c94cc, 0x454d2f41, 0x85b5b38c)
    TEST_MADDU(0x11090066, 0x48b27be5, 0x1d78e4f7, 0x3439632e, 0x444ca9c8, 0x4eb5a5bd)
    TEST_MADDU(0x5e24ba18, 0x77f430c8, 0x3f6f7613, 0x40ed4951, 0x48ab811b, 0x880adaa8)
    TEST_MADDU(0x72b428cd, 0x0cc53f61, 0x43e8ddd9, 0x010acbba, 0xf54a6b77, 0x0d0c0562)
    TEST_MADDU(0x35b7d2af, 0x1420501e, 0x285e7267, 0x47e0c1cf, 0xb975faf8, 0x1f75f30c)
    TEST_MADDU(0x7412502a, 0x64ee20b8, 0x291fc80c, 0x67c39946, 0xe6762f72, 0x75995609)
    TEST_MADDU(0x56ed29d0, 0x0e6226e7, 0x745f9024, 0x77343afc, 0x8ef73540, 0x44925121)
    TEST_MADDU(0x0d4a2f08, 0x7b913d34, 0x4a6a21d5, 0x37a742e2, 0xf0a7f712, 0x8bbea925)
    TEST_MADDU(0x7b8b6604, 0x7a740b93, 0x5633d7ae, 0x0c94666a, 0xad8a0810, 0x7eb07224)
    TEST_MADDU(0x43268778, 0x73acbca6, 0x40cdc998, 0x214b4190, 0x9e9f84f8, 0x7c1a5085)
    TEST_MADDU(0x6ba0ed6e, 0x003d3fab, 0x62388ae2, 0x5e55163b, 0x03a25b84, 0x246ea7f8)
    TEST_MADDU(0x0d027f0c, 0x262168bb, 0x5f5fe1f6, 0x42ba51bb, 0xa74763be, 0x3efd8b19)
    TEST_MADDU(0x3a41b8d9, 0x07be545d, 0x0a9b138b, 0x2e540904, 0x3bf9ea05, 0x09a9ad22)
    TEST_MADDU(0x6cac7515, 0x33badb97, 0x1617a24a, 0x43999ee5, 0x22344d47, 0x39904ce7)
    TEST_MADDU(0x421d027e, 0x0a77326e, 0x3acdd9e2, 0x4f673186, 0xd87f50ca, 0x1cb46cdd)
    TEST_MADDU(0x06086fa2, 0x0537fbb7, 0x070e7468, 0x0193d5a7, 0xe708e77a, 0x05431d5b)
    TEST_MADDU(0x7fac074a, 0x5d424c17, 0x0e283c11, 0x42d28ec2, 0x336cfa2c, 0x60f4507a)
    TEST_MADDU(0x50ef08bd, 0x4ef605aa, 0x641dd052, 0x3c8ff62b, 0x5dedd283, 0x66a54f6a)
    TEST_MADDU(0x4f334555, 0x46565b34, 0x1ae50c67, 0x5c35c462, 0x8db3e0c3, 0x500651b6)
    TEST_MADDU(0x6c77c3f0, 0x7a44ee5d, 0x1ef0161d, 0x26b97cc9, 0x4aa42cb5, 0x7ef2fc3a)
    TEST_MADDU(0x020342ba, 0x298b29a8, 0x550d85cd, 0x6eafb7cf, 0xffbafe7d, 0x4e515a75)
    TEST_MADDU(0x5d46053f, 0x6b252817, 0x324956b4, 0x1f6307bd, 0xd265f423, 0x714f7d78)
    TEST_MADDU(0x759c5a86, 0x6d173096, 0x6eca3944, 0x7ba4ca28, 0xb1f4f526, 0xa299ab23)
    TEST_MADDU(0x724f2c4d, 0x75d8adac, 0x7d389fcf, 0x71fb3397, 0xa580ac66, 0xad998bf7)
    TEST_MADDU(0x531af9c3, 0x0b60dbe1, 0x34cdc259, 0x240a0280, 0x70fad843, 0x12cfdbc3)
    TEST_MADDU(0x5a56e18b, 0x18eb92ac, 0x6099f8ac, 0x298a26e0, 0x54b2000b, 0x28985d2b)
    TEST_MADDU(0x5f41ede0, 0x7b7f0513, 0x05bfeb42, 0x4bb9b1d0, 0x158bb580, 0x7d326aaf)
    TEST_MADDU(0x75c3f370, 0x24b00160, 0x72732e9a, 0x77c7362a, 0x583414b4, 0x5a3c9bca)
    TEST_MADDU(0x4e3b2b08, 0x4780b467, 0x6676edf9, 0x2b813048, 0x29c5c910, 0x58ea63a1)
    TEST_MADDU(0x32a5dc7f, 0x18c044ad, 0x4ae43805, 0x28423705, 0xea6e0798, 0x24874c5c)
    TEST_MADDU(0x05d77544, 0x39ae7149, 0x23e7012d, 0x7826a191, 0xe81a6cc1, 0x4a8824c8)
    TEST_MADDU(0x2f871ef6, 0x211fa0fd, 0x6a21d529, 0x02a218b9, 0x43e80197, 0x22371850)
    TEST_MADDU(0x2c807cde, 0x1eef9782, 0x26ac1b3a, 0x06d75e69, 0x74ccf3a8, 0x1ff828f3)
    TEST_MADDU(0x37db2a2e, 0x074613e6, 0x30618549, 0x171d180f, 0xda55d175, 0x0ba45677)
    TEST_MADDU(0x02c518f9, 0x3621708c, 0x62d6c9df, 0x78890c69, 0x2eab5970, 0x64ab08e9)
    TEST_MADDU(0x5ad171ec, 0x5549f879, 0x70504293, 0x290c9cf4, 0xf9c67a08, 0x674c5bc1)
    TEST_MADDU(0x1ccaace1, 0x56c7308c, 0x548dcd3c, 0x4f708960, 0x030cbf61, 0x71041e4b)
    TEST_MADDU(0x6f877539, 0x1f720542, 0x77b2c065, 0x755eea7d, 0x13c1b88a, 0x56531877)
    TEST_MADDU(0x5920768b, 0x1b99c192, 0x6d858c0f, 0x08a79581, 0x19b9c51a, 0x1f4da007)
    TEST_MADDU(0x3cb9628f, 0x57a76138, 0x0b49ae3b, 0x6939df6d, 0x3800f6ae, 0x5c4b26f0)
    TEST_MADDU(0x7696f8ba, 0x31f5c975, 0x70113dd6, 0x2e7222e9, 0xbdcaac80, 0x464ad987)
    TEST_MADDU(0x393bdd5b, 0x2072c320, 0x458f3af8, 0x3c00f654, 0xcee586bb, 0x30c097e0)
    TEST_MADDU(0x569433ac, 0x286604d7, 0x348a02bd, 0x3165a598, 0xbddaa4e4, 0x32894bcc)
    TEST_MADDU(0x7daffd51, 0x24da4550, 0x5a72428c, 0x1a7aaa32, 0xf6e9f4a9, 0x2e3536a7)
    TEST_MADDU(0x7ba175dc, 0x2f000fc9, 0x69eb3392, 0x6b28eb15, 0x2913b6d6, 0x5b564c5b)
    TEST_MADDU(0x4e72150b, 0x619df3f7, 0x6087d593, 0x27928b96, 0xd1d60a2d, 0x7089e79a)
    TEST_MADDU(0x7d37b589, 0x4e0d61a2, 0x303a2118, 0x39f11819, 0x259730e1, 0x58f7be44)
    TEST_MADDU(0x25b4c2da, 0x3b83cf53, 0x232af786, 0x1c4bbb94, 0x099cbe52, 0x3f66e9c1)
    TEST_MADDU(0x6d7998c8, 0x133c355d, 0x4abdde7d, 0x26b57623, 0x065da1df, 0x1e895f20)
    TEST_MADDU(0x33aef87d, 0x104d1975, 0x62b66c77, 0x0a432c29, 0x66afcb8c, 0x14422077)
    TEST_MADDU(0x38b31e4d, 0x17406f34, 0x3ba8d1c1, 0x36631b9e, 0xaca6ee6b, 0x23ed242b)
    TEST_MADDU(0x3c1ab484, 0x161b144d, 0x50ddc5d0, 0x37bc2a60, 0xe6790284, 0x27b62a0c)
    TEST_MADDU(0x451b2416, 0x3ac8f962, 0x22e51575, 0x138d3921, 0x46daf52b, 0x3d7339f0)
    TEST_MADDU(0x1c66ed59, 0x036ceb08, 0x3b1fc4b8, 0x199ea2e2, 0xca7f07c9, 0x0957a877)
    TEST_MADDU(0x517a4caa, 0x6b59e5d0, 0x538fbafb, 0x772f0f84, 0xd4a06b16, 0x9241122e)
    TEST_MADDU(0x26ddb523, 0x76bab282, 0x137acb19, 0x14574deb, 0xf12baa16, 0x7846ef08)
    TEST_MADDU(0x09f6e7df, 0x5e38a996, 0x3b0cc40e, 0x3da5e05c, 0x211f9ce7, 0x6c70f748)
    TEST_MADDU(0x6e85c30c, 0x1dc33085, 0x47e90c85, 0x2738e159, 0x42a40249, 0x28c7abb5)
    TEST_MADDU(0x35039fb9, 0x0391de46, 0x5d9bfcf7, 0x711e543d, 0x5e21f294, 0x2ceed004)
    TEST_MADDU(0x19acf293, 0x2e79c2c7, 0x28da7e9d, 0x5ec816aa, 0x924e84d5, 0x3d99eb95)
    TEST_MADDU(0x6942bc29, 0x4bbf9412, 0x72554fcb, 0x05a9a982, 0x6e45443f, 0x4e4704a7)
    TEST_MADDU(0x4f2c7f1b, 0x2d751483, 0x1f484c64, 0x20a6cbc5, 0xbf3a940f, 0x31727fd7)
    TEST_MADDU(0x18cefa53, 0x72d80760, 0x17d5db4a, 0x3facaf76, 0xd201a46f, 0x78c5bc5c)
    TEST_MADDU(0x6992b9e2, 0x2b50a663, 0x5403fd61, 0x7389a1c1, 0x6ed7c103, 0x513b9c6e)
    TEST_MADDU(0x09894ff9, 0x0f10c16f, 0x312f821d, 0x780f1305, 0xbdd2018a, 0x2621ebdc)
    TEST_MADDU(0x2cd3f1f4, 0x79188ea2, 0x1f47f45e, 0x61d791ad, 0xeacf537a, 0x850d2974)
    TEST_MADDU(0x7caa6ce8, 0x7ce3f155, 0x52f5e5ea, 0x16575f7b, 0xd7a7ba56, 0x84216399)
    TEST_MADDU(0x2b5db41c, 0x7bd06487, 0x751f7625, 0x14a07045, 0x3ba8bc15, 0x854040c9)
    TEST_MADDU(0x478ff89a, 0x6774c5f1, 0x1a4a19c7, 0x16bc77b5, 0x5813b34d, 0x69ca7ede)
    TEST_MADDU(0x14e9da74, 0x3992662c, 0x3763437a, 0x2db8d4c8, 0x800799c4, 0x4376d66a)
    TEST_MADDU(0x2c6a6d8c, 0x4f391ec4, 0x6d65843e, 0x15fd276e, 0x6c74b230, 0x589ea0ca)
    TEST_MADDU(0x7a89c527, 0x416981a0, 0x0986c92f, 0x04131521, 0x6de78f36, 0x4190528f)
    TEST_MADDU(0x507a430f, 0x3ab64b4c, 0x7c222826, 0x7d4e3504, 0x1ce6c1a7, 0x7778e504)
    TEST_MADDU(0x33ced9ee, 0x1b6a1c85, 0x5f25c6b1, 0x307946d6, 0x2b6057e4, 0x2d6e44f5)
    TEST_MADDU(0x184e0dda, 0x321bac9c, 0x46d0a651, 0x43abc1f7, 0x041c9701, 0x44d3cb2a)
    TEST_MADDU(0x2dec1123, 0x3bf01c77, 0x584c323c, 0x757c09bd, 0xcd01436f, 0x6475b7b0)
    TEST_MADDU(0x2364e268, 0x72964c04, 0x0c388172, 0x384ebcdc, 0x83bfd860, 0x75466a90)
    TEST_MADDU(0x2c28b230, 0x439bc4ed, 0x660791a4, 0x58931fbc, 0x058682a0, 0x66e901fc)
    TEST_MADDU(0x12d4e3b1, 0x536d15e3, 0x6e90472a, 0x0d5ea8d9, 0xbd40c64b, 0x59334b66)
    TEST_MADDU(0x14d69783, 0x78171059, 0x1171bdfa, 0x6550da92, 0xe39bd417, 0x7efe72bc)
    TEST_MADDU(0x32cd5ba5, 0x0d93e620, 0x629f0f96, 0x669c3593, 0x05c55cc7, 0x351b73e7)
    TEST_MADDU(0x28fe02a5, 0x41c4d648, 0x17157c69, 0x414c1080, 0xa3aec725, 0x47a826bc)
    TEST_MADDU(0x73e082e4, 0x5de622ba, 0x04f7d277, 0x21cc9407, 0xea281025, 0x5e8e0d36)
    TEST_MADDU(0x19d63f31, 0x5d4404b3, 0x17489dc5, 0x3d3b2199, 0xadf9eeee, 0x62d5b315)
    TEST_MADDU(0x4fda50b7, 0x23811f37, 0x7589de76, 0x7c0302e7, 0x3660f931, 0x5c7148eb)
    TEST_MADDU(0x671ce424, 0x5b91701a, 0x549622a3, 0x79f1c7d6, 0x77fd8d66, 0x83dc49d7)
    TEST_MADDU(0x2efe85fd, 0x432669cd, 0x075070af, 0x43d51d80, 0x8295b07d, 0x45168e10)
    TEST_MADDU(0x3b3d7a26, 0x18c22ea9, 0x2925f813, 0x6e0ad5cb, 0x4e7f0037, 0x2a723d1a)
    TEST_MADDU(0x265614c9, 0x0bc507a9, 0x54a70b5e, 0x4f54176f, 0x99a1748b, 0x260062ba)
    TEST_MADDU(0x4d89ddf1, 0x6bbc87c7, 0x10a027ef, 0x416a60d5, 0x69bab7cc, 0x6ffc1a85)
    TEST_MADDU(0x49a2aa82, 0x1597fa66, 0x6336f4dd, 0x6378e9b3, 0xec850609, 0x3c25176c)
    TEST_MADDU(0x72dbff19, 0x7a7f92a2, 0x20b40b4d, 0x42b64fd1, 0x9813fbf6, 0x830547be)
    TEST_MADDU(0x1e00b1d9, 0x163de9c3, 0x3eb952b8, 0x051d95fe, 0x2ddddc69, 0x177ec81f)
    TEST_MADDU(0x71cf59dd, 0x134f755c, 0x7f0f5dd4, 0x20cddfdb, 0x29744a39, 0x23978f80)
    TEST_MADDU(0x5675df29, 0x065fce83, 0x64a2fd5b, 0x11b35950, 0xa51aae99, 0x0d552269)
    TEST_MADDU(0x1f21fd2c, 0x0dc8f56e, 0x7fbe2f1b, 0x457811f5, 0x5ceddd03, 0x3073223c)
    TEST_MADDU(0x198dfd18, 0x54653a7a, 0x14cc2964, 0x6717db09, 0x701ffd9c, 0x5cc54f44)
    TEST_MADDU(0x4021c241, 0x256c5153, 0x28823bdf, 0x09c46cc3, 0xba53711e, 0x26f7fa59)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
### return
    jr ra
    nop
END(n4_maddu_test)
